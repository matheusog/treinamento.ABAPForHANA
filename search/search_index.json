{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"ABAP For HANA Material de treinamento de ABAP For HANA Pr\u00e9-Requisitos Modelo de Dados Exerc\u00edcios Eclipse Exerc\u00edcio 1 Exerc\u00edcio 2 Exerc\u00edcios HANA Exerc\u00edcio 1 Exerc\u00edcio 2 Exerc\u00edcio 3 Exerc\u00edcio 4 Exerc\u00edcio 5 Exerc\u00edcio 6 Exerc\u00edcio 7 Exerc\u00edcio 8 Exerc\u00edcio 9 Exerc\u00edcio 10 Exerc\u00edcio ABAP Pacote Exerc\u00edcio 1 Exerc\u00edcio 2 Exerc\u00edcio 3 Exerc\u00edcio 4 Exerc\u00edcio 5 Exerc\u00edcio 6 Exerc\u00edcio 7","title":"Home"},{"location":"#abap-for-hana","text":"Material de treinamento de ABAP For HANA Pr\u00e9-Requisitos Modelo de Dados Exerc\u00edcios Eclipse Exerc\u00edcio 1 Exerc\u00edcio 2 Exerc\u00edcios HANA Exerc\u00edcio 1 Exerc\u00edcio 2 Exerc\u00edcio 3 Exerc\u00edcio 4 Exerc\u00edcio 5 Exerc\u00edcio 6 Exerc\u00edcio 7 Exerc\u00edcio 8 Exerc\u00edcio 9 Exerc\u00edcio 10 Exerc\u00edcio ABAP Pacote Exerc\u00edcio 1 Exerc\u00edcio 2 Exerc\u00edcio 3 Exerc\u00edcio 4 Exerc\u00edcio 5 Exerc\u00edcio 6 Exerc\u00edcio 7","title":"ABAP For HANA"},{"location":"ExerciciosABAP/Exer_1/exercicio1/","text":"Criar Pacote - ABAP Contexto Criar pacote para os pr\u00f3ximos desenvolvimentos/exerc\u00edcios. Pacote Crie um novo pacote com o padr\u00e3o de nomenclatura ZMOG_USERNAME , sendo \"username\" o nome do seu usu\u00e1rio: Crie uma nova request para salvar o objeto (e os pr\u00f3ximos objetos que ser\u00e3o criados nos pr\u00f3ximos desenvolvimentos): Adicione o pacote como favorito no seu usu\u00e1rio:","title":"Pacote"},{"location":"ExerciciosABAP/Exer_1/exercicio1/#criar-pacote-abap","text":"","title":"Criar Pacote - ABAP"},{"location":"ExerciciosABAP/Exer_1/exercicio1/#contexto","text":"Criar pacote para os pr\u00f3ximos desenvolvimentos/exerc\u00edcios.","title":"Contexto"},{"location":"ExerciciosABAP/Exer_1/exercicio1/#pacote","text":"Crie um novo pacote com o padr\u00e3o de nomenclatura ZMOG_USERNAME , sendo \"username\" o nome do seu usu\u00e1rio: Crie uma nova request para salvar o objeto (e os pr\u00f3ximos objetos que ser\u00e3o criados nos pr\u00f3ximos desenvolvimentos): Adicione o pacote como favorito no seu usu\u00e1rio:","title":"Pacote"},{"location":"ExerciciosABAP/Exer_1_B/exercicio1_b/","text":"Exerc\u00edcio 1 - ABAP Contexto Nesse exerc\u00edcio vamos criar um programa que utilize novos comandos do OpenSQL. Ser\u00e1 feito um select simples, onde os seguintes dados dever\u00e3o ser selecionados. Report Crie um novo programa ABAP. Para utilizar o novo compilador do Open SQL, \u00e9 preciso utilizar a nova sintaxe na constru\u00e7\u00e3o da query. Os pontos principais s\u00e3o: - campos separados por ',' (v\u00edrgula); - vari\u00e1veis ABAP referenciadas com '@' (arroba); Al\u00e9m desses dois pontos principais, ainda h\u00e1 novos recursos de comandos que ao serem utilizados, exigem que a query seja escrita com a nova sintaxe: - utilizar comandos SQL novos, como UNION; - utilizar novas fun\u00e7\u00f5es SQL, como COALESCE; - utilizar opera\u00e7\u00f5es condicionais (CASE); - utilizar inline na query (\"DATA(...)\"); - poss\u00edvel colocar o INTO/INTO TABLE como \u00faltima instru\u00e7\u00e3o da query; REPORT zr_exer_01_goulartm. start-of-selection. select carrid, connid, fldate, bookid, case when cancelled = @abap_true then 'Cancelado!' else @abap_false end as status from sbook into table @DATA(lt_result) . cl_demo_output= display( lt_result ).","title":"Exerc\u00edcio 1"},{"location":"ExerciciosABAP/Exer_1_B/exercicio1_b/#exercicio-1-abap","text":"","title":"Exerc\u00edcio 1 - ABAP"},{"location":"ExerciciosABAP/Exer_1_B/exercicio1_b/#contexto","text":"Nesse exerc\u00edcio vamos criar um programa que utilize novos comandos do OpenSQL. Ser\u00e1 feito um select simples, onde os seguintes dados dever\u00e3o ser selecionados.","title":"Contexto"},{"location":"ExerciciosABAP/Exer_1_B/exercicio1_b/#report","text":"Crie um novo programa ABAP. Para utilizar o novo compilador do Open SQL, \u00e9 preciso utilizar a nova sintaxe na constru\u00e7\u00e3o da query. Os pontos principais s\u00e3o: - campos separados por ',' (v\u00edrgula); - vari\u00e1veis ABAP referenciadas com '@' (arroba); Al\u00e9m desses dois pontos principais, ainda h\u00e1 novos recursos de comandos que ao serem utilizados, exigem que a query seja escrita com a nova sintaxe: - utilizar comandos SQL novos, como UNION; - utilizar novas fun\u00e7\u00f5es SQL, como COALESCE; - utilizar opera\u00e7\u00f5es condicionais (CASE); - utilizar inline na query (\"DATA(...)\"); - poss\u00edvel colocar o INTO/INTO TABLE como \u00faltima instru\u00e7\u00e3o da query; REPORT zr_exer_01_goulartm. start-of-selection. select carrid, connid, fldate, bookid, case when cancelled = @abap_true then 'Cancelado!' else @abap_false end as status from sbook into table @DATA(lt_result) . cl_demo_output= display( lt_result ).","title":"Report"},{"location":"ExerciciosABAP/Exer_2/exercicio2/","text":"Exerc\u00edcio 2 - ABAP Contexto define view ZDDL_EXER_2_GOULARTM as select from spfli as connection left outer join sflight as flight on flight.carrid = connection.carrid and flight.connid = connection.connid left outer join sbook as booking on booking.carrid = flight.carrid and booking.connid = flight.connid and booking.fldate = flight.fldate { key connection.carrid , key connection.connid , key flight.fldate , connection.airpfrom , connection.airpto , connection.distance , //connection.distid , @Semantics.amount.currencyCode: 'local_currency' sum( booking.loccuram ) as local_amount, @Semantics.currencyCode: true booking.loccurkey as local_currency, case when connection.distid = 'MI' and connection.carrid = 'AA' then connection.distid when connection.distid = 'MI' and connection.carrid 'AA' then 'MILHAGEM' else 'KILOMETRAGEM' end as distid } group by connection.carrid , connection.connid , flight.fldate , connection.airpfrom , connection.airpto , connection.distance , connection.distid , booking.loccurkey","title":"Exerc\u00edcio 2"},{"location":"ExerciciosABAP/Exer_2/exercicio2/#exercicio-2-abap","text":"","title":"Exerc\u00edcio 2 - ABAP"},{"location":"ExerciciosABAP/Exer_2/exercicio2/#contexto","text":"define view ZDDL_EXER_2_GOULARTM as select from spfli as connection left outer join sflight as flight on flight.carrid = connection.carrid and flight.connid = connection.connid left outer join sbook as booking on booking.carrid = flight.carrid and booking.connid = flight.connid and booking.fldate = flight.fldate { key connection.carrid , key connection.connid , key flight.fldate , connection.airpfrom , connection.airpto , connection.distance , //connection.distid , @Semantics.amount.currencyCode: 'local_currency' sum( booking.loccuram ) as local_amount, @Semantics.currencyCode: true booking.loccurkey as local_currency, case when connection.distid = 'MI' and connection.carrid = 'AA' then connection.distid when connection.distid = 'MI' and connection.carrid 'AA' then 'MILHAGEM' else 'KILOMETRAGEM' end as distid } group by connection.carrid , connection.connid , flight.fldate , connection.airpfrom , connection.airpto , connection.distance , connection.distid , booking.loccurkey","title":"Contexto"},{"location":"ExerciciosABAP/Exer_3/exercicio3/","text":"Exerc\u00edcio 3 - ABAP Contexto define view ZDDL_EXER_3_GOULARTM as select from sflight as flight inner join spfli as connection on flight.carrid = connection.carrid and flight.connid = connection.connid association [0..*] to sbook as _Booking on _Booking.carrid = flight.carrid and _Booking.connid = flight.connid and _Booking.fldate = flight.fldate { key flight.carrid , key flight.connid , key flight.fldate , connection.airpfrom , connection.airpto , connection.distance , connection.distid , @Semantics.amount.currencyCode: 'local_currency' sum( _Booking.loccuram ) as local_amount, @Semantics.currencyCode: true _Booking.loccurkey as local_currency, _Booking } group by flight.carrid , flight.connid , flight.fldate , connection.airpfrom , connection.airpto , connection.distance , connection.distid , _Booking.loccurkey","title":"Exerc\u00edcio 3"},{"location":"ExerciciosABAP/Exer_3/exercicio3/#exercicio-3-abap","text":"","title":"Exerc\u00edcio 3 - ABAP"},{"location":"ExerciciosABAP/Exer_3/exercicio3/#contexto","text":"define view ZDDL_EXER_3_GOULARTM as select from sflight as flight inner join spfli as connection on flight.carrid = connection.carrid and flight.connid = connection.connid association [0..*] to sbook as _Booking on _Booking.carrid = flight.carrid and _Booking.connid = flight.connid and _Booking.fldate = flight.fldate { key flight.carrid , key flight.connid , key flight.fldate , connection.airpfrom , connection.airpto , connection.distance , connection.distid , @Semantics.amount.currencyCode: 'local_currency' sum( _Booking.loccuram ) as local_amount, @Semantics.currencyCode: true _Booking.loccurkey as local_currency, _Booking } group by flight.carrid , flight.connid , flight.fldate , connection.airpfrom , connection.airpto , connection.distance , connection.distid , _Booking.loccurkey","title":"Contexto"},{"location":"ExerciciosABAP/Exer_4/exercicio4/","text":"Exerc\u00edcio 4 - ABAP Contexto define view ZDDL_EXER_4_GOULARTM as select from ZDDL_EXER_3_GOULARTM._Booking as booking association [1] to scarr as _Company on _Company.carrid = booking.carrid { key booking.carrid, key booking.connid, key booking.fldate, key booking.bookid, _Company.carrname, _Company.currcode, @Semantics.amount.currencyCode: '' booking.loccuram, @Semantics.currencyCode: true booking.loccurkey, _Company }","title":"Exerc\u00edcio 4"},{"location":"ExerciciosABAP/Exer_4/exercicio4/#exercicio-4-abap","text":"","title":"Exerc\u00edcio 4 - ABAP"},{"location":"ExerciciosABAP/Exer_4/exercicio4/#contexto","text":"define view ZDDL_EXER_4_GOULARTM as select from ZDDL_EXER_3_GOULARTM._Booking as booking association [1] to scarr as _Company on _Company.carrid = booking.carrid { key booking.carrid, key booking.connid, key booking.fldate, key booking.bookid, _Company.carrname, _Company.currcode, @Semantics.amount.currencyCode: '' booking.loccuram, @Semantics.currencyCode: true booking.loccurkey, _Company }","title":"Contexto"},{"location":"ExerciciosABAP/Exer_5/exercicio5/","text":"Exerc\u00edcio 5 - ABAP Contexto define view ZDDL_EXER_5_GOULARTM as select from ZDDL_EXER_3_GOULARTM as bookings { key bookings.carrid, key bookings.connid, key bookings.fldate, //key bookings._Booking.bookid, key bookings._Booking[inner].bookid, bookings.airpfrom, bookings.airpto, bookings.distance, bookings.distid }","title":"Exerc\u00edcio 5"},{"location":"ExerciciosABAP/Exer_5/exercicio5/#exercicio-5-abap","text":"","title":"Exerc\u00edcio 5 - ABAP"},{"location":"ExerciciosABAP/Exer_5/exercicio5/#contexto","text":"define view ZDDL_EXER_5_GOULARTM as select from ZDDL_EXER_3_GOULARTM as bookings { key bookings.carrid, key bookings.connid, key bookings.fldate, //key bookings._Booking.bookid, key bookings._Booking[inner].bookid, bookings.airpfrom, bookings.airpto, bookings.distance, bookings.distid }","title":"Contexto"},{"location":"ExerciciosABAP/Exer_6/exercicio6/","text":"Exerc\u00edcio 6 - ABAP Contexto class ZCL_AMDP_EXER_6_GOULARTM definition public. public section. types: begin of ty_exer6_out , CLIENT type sy-mandt, AIRCOMPANY_ID type spfli-carrid, COMPANY_NAME type scarr-carrname, COMPANY_CURRENCY type scarr-currcode, CONNECTION_ID type spfli-connid, DEPARTURE_COUNTRY type spfli-countryfr, DEPARTURE_CITY type spfli-cityfrom, DEPARTURE_AIRPORT type spfli-airpfrom, DEPARTURE_AIRPORT_NAME type sairport-name, DEPARTURE_TIME type spfli-deptime, FLIGHT_TIME type spfli-fltime, ARRIVE_COUNTRY type spfli-countryto, ARRIVE_CITY type spfli-cityto, ARRIVE_AIRPORT type spfli-airpto, ARRIVE_AIRPORT_NAME type sairport-name, ARRIVE_TIME type spfli-arrtime, DEPARTURE_TEXT type string, end of ty_exer6_out , tt_exer6_out type standard table of ty_exer6_out with empty key. interfaces: if_amdp_marker_hdb. class-methods get_data_exer_6 importing value(iv_mandt) type sy-mandt value(iv_string_filter) type string exporting value(et_result) type tt_exer6_out. protected section. private section. ENDCLASS. CLASS ZCL_AMDP_EXER_6_GOULARTM IMPLEMENTATION. method get_data_exer_6 by database procedure for hdb language sqlscript options read-only using spfli scarr sairport. lt_connections = select MANDT , CARRID , CONNID , COUNTRYFR , CITYFROM , AIRPFROM , DEPTIME , FLTIME , COUNTRYTO , CITYTO , AIRPTO , ARRTIME from spfli where MANDT = :iv_mandt ; lt_airports = select MANDT , ID as AIRPID , NAME from sairport where MANDT = :iv_mandt and ID in ( select distinct AIRPFROM from :lt_connections union distinct select distinct AIRPTO from :lt_connections ) ; lt_companies = select MANDT , CARRID , CARRNAME , CURRCODE from scarr where MANDT = :iv_mandt and CARRID in ( select distinct CARRID from :lt_connections ) ; lt_connections_join = select connection.MANDT as CLIENT , connection.CARRID as AIRCOMPANY_ID , company.CARRNAME as COMPANY_NAME , company.CURRCODE as COMPANY_CURRENCY , connection.CONNID as CONNECTION_ID , connection.COUNTRYFR as DEPARTURE_COUNTRY , connection.CITYFROM as DEPARTURE_CITY , connection.AIRPFROM as DEPARTURE_AIRPORT , airport_from.NAME as DEPARTURE_AIRPORT_NAME , connection.DEPTIME as DEPARTURE_TIME , connection.FLTIME as FLIGHT_TIME , connection.COUNTRYTO as ARRIVE_COUNTRY , connection.CITYTO as ARRIVE_CITY , connection.AIRPTO as ARRIVE_AIRPORT , airport_to.NAME as ARRIVE_AIRPORT_NAME , connection.ARRTIME as ARRIVE_TIME , concat( connection.COUNTRYFR, concat( '/', concat( connection.CITYFROM, concat( ' - ', concat( airport_from.NAME, concat( ' - ', TO_NVARCHAR( to_time( connection.DEPTIME ) , 'HH:mm:SS' ) ) ) ) ) ) ) as DEPARTURE_TEXT FROM :lt_connections as connection inner join :lt_companies as company on company.MANDT = connection.MANDT and company.CARRID = connection.CARRID inner join :lt_airports as airport_from on airport_from.MANDT = connection.MANDT and airport_from.AIRPID = connection.AIRPFROM inner join :lt_airports as airport_to on airport_to.MANDT = connection.MANDT and airport_to.AIRPID = connection.AIRPTO ; et_result = select * from :lt_connections_join ; et_result = apply_filter ( :et_result , :iv_string_filter ); endmethod. ENDCLASS.","title":"Exerc\u00edcio 6"},{"location":"ExerciciosABAP/Exer_6/exercicio6/#exercicio-6-abap","text":"","title":"Exerc\u00edcio 6 - ABAP"},{"location":"ExerciciosABAP/Exer_6/exercicio6/#contexto","text":"class ZCL_AMDP_EXER_6_GOULARTM definition public. public section. types: begin of ty_exer6_out , CLIENT type sy-mandt, AIRCOMPANY_ID type spfli-carrid, COMPANY_NAME type scarr-carrname, COMPANY_CURRENCY type scarr-currcode, CONNECTION_ID type spfli-connid, DEPARTURE_COUNTRY type spfli-countryfr, DEPARTURE_CITY type spfli-cityfrom, DEPARTURE_AIRPORT type spfli-airpfrom, DEPARTURE_AIRPORT_NAME type sairport-name, DEPARTURE_TIME type spfli-deptime, FLIGHT_TIME type spfli-fltime, ARRIVE_COUNTRY type spfli-countryto, ARRIVE_CITY type spfli-cityto, ARRIVE_AIRPORT type spfli-airpto, ARRIVE_AIRPORT_NAME type sairport-name, ARRIVE_TIME type spfli-arrtime, DEPARTURE_TEXT type string, end of ty_exer6_out , tt_exer6_out type standard table of ty_exer6_out with empty key. interfaces: if_amdp_marker_hdb. class-methods get_data_exer_6 importing value(iv_mandt) type sy-mandt value(iv_string_filter) type string exporting value(et_result) type tt_exer6_out. protected section. private section. ENDCLASS. CLASS ZCL_AMDP_EXER_6_GOULARTM IMPLEMENTATION. method get_data_exer_6 by database procedure for hdb language sqlscript options read-only using spfli scarr sairport. lt_connections = select MANDT , CARRID , CONNID , COUNTRYFR , CITYFROM , AIRPFROM , DEPTIME , FLTIME , COUNTRYTO , CITYTO , AIRPTO , ARRTIME from spfli where MANDT = :iv_mandt ; lt_airports = select MANDT , ID as AIRPID , NAME from sairport where MANDT = :iv_mandt and ID in ( select distinct AIRPFROM from :lt_connections union distinct select distinct AIRPTO from :lt_connections ) ; lt_companies = select MANDT , CARRID , CARRNAME , CURRCODE from scarr where MANDT = :iv_mandt and CARRID in ( select distinct CARRID from :lt_connections ) ; lt_connections_join = select connection.MANDT as CLIENT , connection.CARRID as AIRCOMPANY_ID , company.CARRNAME as COMPANY_NAME , company.CURRCODE as COMPANY_CURRENCY , connection.CONNID as CONNECTION_ID , connection.COUNTRYFR as DEPARTURE_COUNTRY , connection.CITYFROM as DEPARTURE_CITY , connection.AIRPFROM as DEPARTURE_AIRPORT , airport_from.NAME as DEPARTURE_AIRPORT_NAME , connection.DEPTIME as DEPARTURE_TIME , connection.FLTIME as FLIGHT_TIME , connection.COUNTRYTO as ARRIVE_COUNTRY , connection.CITYTO as ARRIVE_CITY , connection.AIRPTO as ARRIVE_AIRPORT , airport_to.NAME as ARRIVE_AIRPORT_NAME , connection.ARRTIME as ARRIVE_TIME , concat( connection.COUNTRYFR, concat( '/', concat( connection.CITYFROM, concat( ' - ', concat( airport_from.NAME, concat( ' - ', TO_NVARCHAR( to_time( connection.DEPTIME ) , 'HH:mm:SS' ) ) ) ) ) ) ) as DEPARTURE_TEXT FROM :lt_connections as connection inner join :lt_companies as company on company.MANDT = connection.MANDT and company.CARRID = connection.CARRID inner join :lt_airports as airport_from on airport_from.MANDT = connection.MANDT and airport_from.AIRPID = connection.AIRPFROM inner join :lt_airports as airport_to on airport_to.MANDT = connection.MANDT and airport_to.AIRPID = connection.AIRPTO ; et_result = select * from :lt_connections_join ; et_result = apply_filter ( :et_result , :iv_string_filter ); endmethod. ENDCLASS.","title":"Contexto"},{"location":"ExerciciosABAP/Exer_7/exercicio7/","text":"Exerc\u00edcio 7 - ABAP Contexto class ZCL_AMDP_EXER_7_GOULARTM definition public. public section. interfaces: if_amdp_marker_hdb. class-methods get_data_exer_7 for table function ZDDL_TBF_EXER7_GOULARTM. protected section. private section. ENDCLASS. CLASS ZCL_AMDP_EXER_7_GOULARTM IMPLEMENTATION. method get_data_exer_7 by database function for hdb language sqlscript options read-only using spfli scarr sairport. lt_connections = select MANDT , CARRID , CONNID , COUNTRYFR , CITYFROM , AIRPFROM , DEPTIME , FLTIME , COUNTRYTO , CITYTO , AIRPTO , ARRTIME from spfli where MANDT = :p_mandt ; lt_airports = select MANDT , ID as AIRPID , NAME from sairport where MANDT = :p_mandt and ID in ( select distinct AIRPFROM from :lt_connections union distinct select distinct AIRPTO from :lt_connections ) ; lt_companies = select MANDT , CARRID , CARRNAME , CURRCODE from scarr where MANDT = :p_mandt and CARRID in ( select distinct CARRID from :lt_connections ) ; lt_connections_join = select connection.MANDT as CLIENT , connection.CARRID as AIRCOMPANY_ID , company.CARRNAME as COMPANY_NAME , company.CURRCODE as COMPANY_CURRENCY , connection.CONNID as CONNECTION_ID , connection.COUNTRYFR as DEPARTURE_COUNTRY , connection.CITYFROM as DEPARTURE_CITY , connection.AIRPFROM as DEPARTURE_AIRPORT , airport_from.NAME as DEPARTURE_AIRPORT_NAME , connection.DEPTIME as DEPARTURE_TIME , connection.FLTIME as FLIGHT_TIME , connection.COUNTRYTO as ARRIVE_COUNTRY , connection.CITYTO as ARRIVE_CITY , connection.AIRPTO as ARRIVE_AIRPORT , airport_to.NAME as ARRIVE_AIRPORT_NAME , connection.ARRTIME as ARRIVE_TIME , concat( connection.COUNTRYFR, concat( '/', concat( connection.CITYFROM, concat( ' - ', concat( airport_from.NAME, concat( ' - ', TO_NVARCHAR( to_time( connection.DEPTIME ) , 'HH:mm:SS' ) ) ) ) ) ) ) as DEPARTURE_TEXT FROM :lt_connections as connection inner join :lt_companies as company on company.MANDT = connection.MANDT and company.CARRID = connection.CARRID inner join :lt_airports as airport_from on airport_from.MANDT = connection.MANDT and airport_from.AIRPID = connection.AIRPFROM inner join :lt_airports as airport_to on airport_to.MANDT = connection.MANDT and airport_to.AIRPID = connection.AIRPTO ; lt_connections_join = apply_filter( :lt_connections_join, :p_filter ); return select * from :lt_connections_join ; endmethod. ENDCLASS. define table function ZDDL_TBF_EXER7_GOULARTM with parameters @Environment.systemField: #CLIENT p_mandt:abap.clnt, p_filter: abap.sstring( 300 ) returns { CLIENT : abap.clnt; AIRCOMPANY_ID : s_carr_id ; COMPANY_NAME : s_carrname; COMPANY_CURRENCY : s_currcode; CONNECTION_ID : s_conn_id; DEPARTURE_COUNTRY : land1; DEPARTURE_CITY : s_from_cit; DEPARTURE_AIRPORT : s_fromairp; DEPARTURE_AIRPORT_NAME : s_airpname; DEPARTURE_TIME : s_dep_time; FLIGHT_TIME : s_fltime; ARRIVE_COUNTRY : land1; ARRIVE_CITY : s_to_city; ARRIVE_AIRPORT : s_toairp; ARRIVE_AIRPORT_NAME : s_airpname; ARRIVE_TIME : s_arr_time; DEPARTURE_TEXT : abap.sstring( 100 ); } implemented by method ZCL_AMDP_EXER_7_GOULARTM= get_data_exer_7;","title":"Exerc\u00edcio 7"},{"location":"ExerciciosABAP/Exer_7/exercicio7/#exercicio-7-abap","text":"","title":"Exerc\u00edcio 7 - ABAP"},{"location":"ExerciciosABAP/Exer_7/exercicio7/#contexto","text":"class ZCL_AMDP_EXER_7_GOULARTM definition public. public section. interfaces: if_amdp_marker_hdb. class-methods get_data_exer_7 for table function ZDDL_TBF_EXER7_GOULARTM. protected section. private section. ENDCLASS. CLASS ZCL_AMDP_EXER_7_GOULARTM IMPLEMENTATION. method get_data_exer_7 by database function for hdb language sqlscript options read-only using spfli scarr sairport. lt_connections = select MANDT , CARRID , CONNID , COUNTRYFR , CITYFROM , AIRPFROM , DEPTIME , FLTIME , COUNTRYTO , CITYTO , AIRPTO , ARRTIME from spfli where MANDT = :p_mandt ; lt_airports = select MANDT , ID as AIRPID , NAME from sairport where MANDT = :p_mandt and ID in ( select distinct AIRPFROM from :lt_connections union distinct select distinct AIRPTO from :lt_connections ) ; lt_companies = select MANDT , CARRID , CARRNAME , CURRCODE from scarr where MANDT = :p_mandt and CARRID in ( select distinct CARRID from :lt_connections ) ; lt_connections_join = select connection.MANDT as CLIENT , connection.CARRID as AIRCOMPANY_ID , company.CARRNAME as COMPANY_NAME , company.CURRCODE as COMPANY_CURRENCY , connection.CONNID as CONNECTION_ID , connection.COUNTRYFR as DEPARTURE_COUNTRY , connection.CITYFROM as DEPARTURE_CITY , connection.AIRPFROM as DEPARTURE_AIRPORT , airport_from.NAME as DEPARTURE_AIRPORT_NAME , connection.DEPTIME as DEPARTURE_TIME , connection.FLTIME as FLIGHT_TIME , connection.COUNTRYTO as ARRIVE_COUNTRY , connection.CITYTO as ARRIVE_CITY , connection.AIRPTO as ARRIVE_AIRPORT , airport_to.NAME as ARRIVE_AIRPORT_NAME , connection.ARRTIME as ARRIVE_TIME , concat( connection.COUNTRYFR, concat( '/', concat( connection.CITYFROM, concat( ' - ', concat( airport_from.NAME, concat( ' - ', TO_NVARCHAR( to_time( connection.DEPTIME ) , 'HH:mm:SS' ) ) ) ) ) ) ) as DEPARTURE_TEXT FROM :lt_connections as connection inner join :lt_companies as company on company.MANDT = connection.MANDT and company.CARRID = connection.CARRID inner join :lt_airports as airport_from on airport_from.MANDT = connection.MANDT and airport_from.AIRPID = connection.AIRPFROM inner join :lt_airports as airport_to on airport_to.MANDT = connection.MANDT and airport_to.AIRPID = connection.AIRPTO ; lt_connections_join = apply_filter( :lt_connections_join, :p_filter ); return select * from :lt_connections_join ; endmethod. ENDCLASS. define table function ZDDL_TBF_EXER7_GOULARTM with parameters @Environment.systemField: #CLIENT p_mandt:abap.clnt, p_filter: abap.sstring( 300 ) returns { CLIENT : abap.clnt; AIRCOMPANY_ID : s_carr_id ; COMPANY_NAME : s_carrname; COMPANY_CURRENCY : s_currcode; CONNECTION_ID : s_conn_id; DEPARTURE_COUNTRY : land1; DEPARTURE_CITY : s_from_cit; DEPARTURE_AIRPORT : s_fromairp; DEPARTURE_AIRPORT_NAME : s_airpname; DEPARTURE_TIME : s_dep_time; FLIGHT_TIME : s_fltime; ARRIVE_COUNTRY : land1; ARRIVE_CITY : s_to_city; ARRIVE_AIRPORT : s_toairp; ARRIVE_AIRPORT_NAME : s_airpname; ARRIVE_TIME : s_arr_time; DEPARTURE_TEXT : abap.sstring( 100 ); } implemented by method ZCL_AMDP_EXER_7_GOULARTM= get_data_exer_7;","title":"Contexto"},{"location":"ExerciciosEclipse/Exer_1/exercicio1/","text":"Exerc\u00edcio 1 - Eclipse Contexto Nesse exerc\u00edcio vamos aprender a como se conectar \u00e0 um sistema HANA pelo Eclipse e como criar um novo projeto de desenvolvimento. Conectando \u00e0 Plataforma HANA Abra a perspectiva de HANA Development no Eclipse em \"Window Perspective Open Perspective Other\": Com a perspectiva aberta, clique em \"Add System\": Na tela aberta preencha os dados com o host da plataforma HANA, a inst\u00e2ncia, o \"Tenant\", o idioma e uma descri\u00e7\u00e3o para identificar o ambiente, depois clique em \"Next\": Informe seu usu\u00e1rio e senha, clique em \"Next\" e depois em \"Finish\" Caso seja seu primeiro logon, o sistema vai pedir para voc\u00ea redefinir sua senha: O sistema HANA vai aparecer no seu workspace: Adicionando um novo reposit\u00f3rio Nesse passo vamos criar um reposit\u00f3rio novo para utilizamos para os desenvolvimentos. V\u00e1 na aba \"Repositories\": Clique em \"Create Repository Workspace\": D\u00ea o nome do reposit\u00f3rio seguindo o padr\u00e3o \"tech_ username \" e clique em \"Finish\": Criando um novo projeto Nessa etapa vamos criar um novo projeto ligado ao reposit\u00f3rio criado no passo anterior. Acesse a aba \"Project Explorer\": Crie um novo \"XS Project\" indo em \"File New XS Project\": D\u00ea o nome do projeto de \"Tech_Treinamento_ USERNAME \", e depois clique em \"Next\": Selecionem o workspace/repository criado no passo anterior e desmarquem a op\u00e7\u00e3o Add Project Folder as Subpackage: Cliquem em \" Browse \" e selecione o pacote \" mog \": No campo \" Repository Package \" complemente o valor \" mog \" com o seu usu\u00e1rio, ficando com um padr\u00e3o \" mog.username \", em sequ\u00eancia clique em \"Next\": Desmarque todos os checkbox dessa \u00faltima tela, e clique em \"Finish\": Erro de File Encoding Ap\u00f3s o projeto ser criado provavelmente vai ocorrer um erro de \"File encoding Cp1252 not supported\", devido ao Eclipse n\u00e3o estar configurado para trabalhar com formato de arquivo UTF-8. Para corrigir esse problema v\u00e1 em \" Window Preferences \" Acesse o menu \" General Workspace \": Altere a configura\u00e7\u00e3o de Text file encoding de \" Default (Cp1252) \" para \" Other \", selecionando a op\u00e7\u00e3o \" UTF-8 \": Projeto n\u00e3o aparece no Project Explorer Em algumas vers\u00f5es do Eclipse, o XS Project n\u00e3o est\u00e1 configurado para aparecer na perspectiva de \"HANA Development\". Caso ap\u00f3s voc\u00ea criar o seu projeto o mesmo n\u00e3o aparecer na aba \"Project Explorer\" da perspectiva de \"HANA Development\", acesse a perspectiva de \"Java\": Ativando seu projeto Ap\u00f3s o projeto ser criado no passo anterior, o pacote criado com o projeto (\" mog.username \") vai existir apenas localmente na sua m\u00e1quina (design-time). Vamos ent\u00e3o ativar o mesmo, para que o pacote que foi criado no projeto seja espelhado no HANA em tempo de runtime. Clique com o bot\u00e3o direito em cima do seu projeto, e acesse o menu \" Team Activate All... \": Marque todos os objetos e clique em \"Ok\": Na view de \"Job Log\" voc\u00ea pode acompanhar o processo de ativa\u00e7\u00e3o, e se o mesmo concluiu com sucesso ou se ocorreu algum erro: Ap\u00f3s a ativa\u00e7\u00e3o ser conclu\u00edda, nosso pacote estar\u00e1 commitado no HANA. Para verificar, acesse a aba \" Systems \" e verifique a pasta \" Content \", o seu pacote dever\u00e1 constar como um subpacote do pacote \"mog\":","title":"Exerc\u00edcio 1"},{"location":"ExerciciosEclipse/Exer_1/exercicio1/#exercicio-1-eclipse","text":"","title":"Exerc\u00edcio 1 - Eclipse"},{"location":"ExerciciosEclipse/Exer_1/exercicio1/#contexto","text":"Nesse exerc\u00edcio vamos aprender a como se conectar \u00e0 um sistema HANA pelo Eclipse e como criar um novo projeto de desenvolvimento.","title":"Contexto"},{"location":"ExerciciosEclipse/Exer_1/exercicio1/#conectando-a-plataforma-hana","text":"Abra a perspectiva de HANA Development no Eclipse em \"Window Perspective Open Perspective Other\": Com a perspectiva aberta, clique em \"Add System\": Na tela aberta preencha os dados com o host da plataforma HANA, a inst\u00e2ncia, o \"Tenant\", o idioma e uma descri\u00e7\u00e3o para identificar o ambiente, depois clique em \"Next\": Informe seu usu\u00e1rio e senha, clique em \"Next\" e depois em \"Finish\" Caso seja seu primeiro logon, o sistema vai pedir para voc\u00ea redefinir sua senha: O sistema HANA vai aparecer no seu workspace:","title":"Conectando \u00e0 Plataforma HANA"},{"location":"ExerciciosEclipse/Exer_1/exercicio1/#adicionando-um-novo-repositorio","text":"Nesse passo vamos criar um reposit\u00f3rio novo para utilizamos para os desenvolvimentos. V\u00e1 na aba \"Repositories\": Clique em \"Create Repository Workspace\": D\u00ea o nome do reposit\u00f3rio seguindo o padr\u00e3o \"tech_ username \" e clique em \"Finish\":","title":"Adicionando um novo reposit\u00f3rio"},{"location":"ExerciciosEclipse/Exer_1/exercicio1/#criando-um-novo-projeto","text":"Nessa etapa vamos criar um novo projeto ligado ao reposit\u00f3rio criado no passo anterior. Acesse a aba \"Project Explorer\": Crie um novo \"XS Project\" indo em \"File New XS Project\": D\u00ea o nome do projeto de \"Tech_Treinamento_ USERNAME \", e depois clique em \"Next\": Selecionem o workspace/repository criado no passo anterior e desmarquem a op\u00e7\u00e3o Add Project Folder as Subpackage: Cliquem em \" Browse \" e selecione o pacote \" mog \": No campo \" Repository Package \" complemente o valor \" mog \" com o seu usu\u00e1rio, ficando com um padr\u00e3o \" mog.username \", em sequ\u00eancia clique em \"Next\": Desmarque todos os checkbox dessa \u00faltima tela, e clique em \"Finish\":","title":"Criando um novo projeto"},{"location":"ExerciciosEclipse/Exer_1/exercicio1/#erro-de-file-encoding","text":"Ap\u00f3s o projeto ser criado provavelmente vai ocorrer um erro de \"File encoding Cp1252 not supported\", devido ao Eclipse n\u00e3o estar configurado para trabalhar com formato de arquivo UTF-8. Para corrigir esse problema v\u00e1 em \" Window Preferences \" Acesse o menu \" General Workspace \": Altere a configura\u00e7\u00e3o de Text file encoding de \" Default (Cp1252) \" para \" Other \", selecionando a op\u00e7\u00e3o \" UTF-8 \":","title":"Erro de File Encoding"},{"location":"ExerciciosEclipse/Exer_1/exercicio1/#projeto-nao-aparece-no-project-explorer","text":"Em algumas vers\u00f5es do Eclipse, o XS Project n\u00e3o est\u00e1 configurado para aparecer na perspectiva de \"HANA Development\". Caso ap\u00f3s voc\u00ea criar o seu projeto o mesmo n\u00e3o aparecer na aba \"Project Explorer\" da perspectiva de \"HANA Development\", acesse a perspectiva de \"Java\":","title":"Projeto n\u00e3o aparece no Project Explorer"},{"location":"ExerciciosEclipse/Exer_1/exercicio1/#ativando-seu-projeto","text":"Ap\u00f3s o projeto ser criado no passo anterior, o pacote criado com o projeto (\" mog.username \") vai existir apenas localmente na sua m\u00e1quina (design-time). Vamos ent\u00e3o ativar o mesmo, para que o pacote que foi criado no projeto seja espelhado no HANA em tempo de runtime. Clique com o bot\u00e3o direito em cima do seu projeto, e acesse o menu \" Team Activate All... \": Marque todos os objetos e clique em \"Ok\": Na view de \"Job Log\" voc\u00ea pode acompanhar o processo de ativa\u00e7\u00e3o, e se o mesmo concluiu com sucesso ou se ocorreu algum erro: Ap\u00f3s a ativa\u00e7\u00e3o ser conclu\u00edda, nosso pacote estar\u00e1 commitado no HANA. Para verificar, acesse a aba \" Systems \" e verifique a pasta \" Content \", o seu pacote dever\u00e1 constar como um subpacote do pacote \"mog\":","title":"Ativando seu projeto"},{"location":"ExerciciosEclipse/Exer_2/exercicio2/","text":"Exerc\u00edcio 2 - Eclipse Contexto Nesse exerc\u00edcio vamos aprender a como se conectar \u00e0 um sistema Netweaver ABAP pelo Eclipse. Conectando ao ambiente ABAP Abra a perspectiva de ABAP Development no Eclipse em \" Window Perspective Open Perspective Other \": Com a perspectiva aberta, crie um novo projeto ABAP indo em \" File New ABAP Project \": A tela exibida cont\u00e9m todos os sistemas configurados no seu SAP Logon. Selecione o sistema que deseja se conectar, clique em \"Next\" e depois em \"Next\" novamente: Informe o mandante que deseja logar, usu\u00e1rio, senha e idioma. ATEN\u00c7\u00c3O nesse passo, pois ap\u00f3s finalizado a cri\u00e3\u00e7\u00e3o do projeto, n\u00e3o \u00e9 poss\u00edvel modificar nenhum dado (n\u00e3o \u00e9 possivel depois logar no mesmo projeto em outro mandante, idioma ou com outro usu\u00e1rio). Caso queira logar em outro mandante, idioma ou com outro usu\u00e1rio, ser\u00e1 preciso criar um novo projeto: Com isso o projeto ABAP ser\u00e1 criado e voc\u00ea estar\u00e1 conectado ao ambiente pelo Eclipse:","title":"Exerc\u00edcio 2"},{"location":"ExerciciosEclipse/Exer_2/exercicio2/#exercicio-2-eclipse","text":"","title":"Exerc\u00edcio 2 - Eclipse"},{"location":"ExerciciosEclipse/Exer_2/exercicio2/#contexto","text":"Nesse exerc\u00edcio vamos aprender a como se conectar \u00e0 um sistema Netweaver ABAP pelo Eclipse.","title":"Contexto"},{"location":"ExerciciosEclipse/Exer_2/exercicio2/#conectando-ao-ambiente-abap","text":"Abra a perspectiva de ABAP Development no Eclipse em \" Window Perspective Open Perspective Other \": Com a perspectiva aberta, crie um novo projeto ABAP indo em \" File New ABAP Project \": A tela exibida cont\u00e9m todos os sistemas configurados no seu SAP Logon. Selecione o sistema que deseja se conectar, clique em \"Next\" e depois em \"Next\" novamente: Informe o mandante que deseja logar, usu\u00e1rio, senha e idioma. ATEN\u00c7\u00c3O nesse passo, pois ap\u00f3s finalizado a cri\u00e3\u00e7\u00e3o do projeto, n\u00e3o \u00e9 poss\u00edvel modificar nenhum dado (n\u00e3o \u00e9 possivel depois logar no mesmo projeto em outro mandante, idioma ou com outro usu\u00e1rio). Caso queira logar em outro mandante, idioma ou com outro usu\u00e1rio, ser\u00e1 preciso criar um novo projeto: Com isso o projeto ABAP ser\u00e1 criado e voc\u00ea estar\u00e1 conectado ao ambiente pelo Eclipse:","title":"Conectando ao ambiente ABAP"},{"location":"ExerciciosHANA/Exer_1/exercicio1/","text":"Exerc\u00edcio 1 - HANA Contexto Criar uma view que traga dados de conex\u00f5es (SPFLI) somente com dados de partida dos voos (omitir informa\u00e7\u00f5es de chegada dos voos). A view deve retornar as seguintes informa\u00e7\u00f5es: Key Campo Origem Hidden X CLIENT SPFLI-MANDT X AIRCOMPANY_ID SPFLI-CARRID COMPANY_NAME SCARR-CARRNAME COMPANY_CURRENCY SCARR-CURRCODE X CONNECTION_ID SPFLI-CONNID DEPARTURE_COUNTRY SPFLI-COUNTRYFR DEPARTURE_CITY SPFLI-CITYFROM DEPARTURE_AIRPORT SPFLI-AIRPFROM DEPARTURE_AIRPORT_NAME SAIRPORT-NAME DEPARTURE_TIME SPFLI-DEPTIME FLIGHT_TIME SPFLI-FLTIME FLIGHT_DISTANCE SPFLI-DISTANCE FLIGHT_DISTANCE_UNIT SPFLI-DISTID FLIGHT_TYPE SPFLI-FLTYPE FLIGHT_DAYS SPFLI-PERIOD X Calculation View Crie uma nova Calculation View indo em \"File New Other\" ou acessando o menu de contexto com o bot\u00e3o direito do mouse e indo em \"New Other\": Vamos criar uma Calculation View do tipo Dimension. Use como no nome CA_EXER_1_USERNAME , sendo USERNAME o nome do seu usu\u00e1rio: Crie um novo node do tipo Projection : Adicione a tabela SAPABAP1.SPFLI (dados de conex\u00f5es de v\u00f4os): Adicione os seguintes campos \u00e0 sa\u00edda da Projection: Renomeie os campos de sa\u00edda da Projection: Reposicione os campos deixandos na seguinte ordem: Renomeie a Projection para um nome mais significativo: Adicione um novo node do tipo Join : Use o node do tipo Join para unir a Projection Connection_Data e a tabela SAPABAP1.SAIRPORT : Renomeie o Join para um nome mais significativo: Fa\u00e7a a liga\u00e7\u00e3o dos campos do Join entre as duas entidades: Use o Join do tipo Referrential: Adicione os campos a seguir para os campos de sa\u00edda do Join: Renomeie o campo NAME para um label mais significativo: Crie um novo node do tipo Join entre o Join_Connection_Airport e a tabela SAPABAP1.SCARR , adicionando os seguintes campos de sa\u00edda: Adicione o Join a Projection final de sa\u00edda da Calculation View: Clique no node de Semantics : Marque o campo Flight_Days como Hidden : Marque os campos que s\u00e3o chave prim\u00e1ria da View: V\u00e1 na aba Properties e ajuste o Default Client de Session Client para Cross Client : Salve e ative a view: Para visualizar os dados da view, clique em Data Preview :","title":"Exerc\u00edcio 1"},{"location":"ExerciciosHANA/Exer_1/exercicio1/#exercicio-1-hana","text":"","title":"Exerc\u00edcio 1 - HANA"},{"location":"ExerciciosHANA/Exer_1/exercicio1/#contexto","text":"Criar uma view que traga dados de conex\u00f5es (SPFLI) somente com dados de partida dos voos (omitir informa\u00e7\u00f5es de chegada dos voos). A view deve retornar as seguintes informa\u00e7\u00f5es: Key Campo Origem Hidden X CLIENT SPFLI-MANDT X AIRCOMPANY_ID SPFLI-CARRID COMPANY_NAME SCARR-CARRNAME COMPANY_CURRENCY SCARR-CURRCODE X CONNECTION_ID SPFLI-CONNID DEPARTURE_COUNTRY SPFLI-COUNTRYFR DEPARTURE_CITY SPFLI-CITYFROM DEPARTURE_AIRPORT SPFLI-AIRPFROM DEPARTURE_AIRPORT_NAME SAIRPORT-NAME DEPARTURE_TIME SPFLI-DEPTIME FLIGHT_TIME SPFLI-FLTIME FLIGHT_DISTANCE SPFLI-DISTANCE FLIGHT_DISTANCE_UNIT SPFLI-DISTID FLIGHT_TYPE SPFLI-FLTYPE FLIGHT_DAYS SPFLI-PERIOD X","title":"Contexto"},{"location":"ExerciciosHANA/Exer_1/exercicio1/#calculation-view","text":"Crie uma nova Calculation View indo em \"File New Other\" ou acessando o menu de contexto com o bot\u00e3o direito do mouse e indo em \"New Other\": Vamos criar uma Calculation View do tipo Dimension. Use como no nome CA_EXER_1_USERNAME , sendo USERNAME o nome do seu usu\u00e1rio: Crie um novo node do tipo Projection : Adicione a tabela SAPABAP1.SPFLI (dados de conex\u00f5es de v\u00f4os): Adicione os seguintes campos \u00e0 sa\u00edda da Projection: Renomeie os campos de sa\u00edda da Projection: Reposicione os campos deixandos na seguinte ordem: Renomeie a Projection para um nome mais significativo: Adicione um novo node do tipo Join : Use o node do tipo Join para unir a Projection Connection_Data e a tabela SAPABAP1.SAIRPORT : Renomeie o Join para um nome mais significativo: Fa\u00e7a a liga\u00e7\u00e3o dos campos do Join entre as duas entidades: Use o Join do tipo Referrential: Adicione os campos a seguir para os campos de sa\u00edda do Join: Renomeie o campo NAME para um label mais significativo: Crie um novo node do tipo Join entre o Join_Connection_Airport e a tabela SAPABAP1.SCARR , adicionando os seguintes campos de sa\u00edda: Adicione o Join a Projection final de sa\u00edda da Calculation View: Clique no node de Semantics : Marque o campo Flight_Days como Hidden : Marque os campos que s\u00e3o chave prim\u00e1ria da View: V\u00e1 na aba Properties e ajuste o Default Client de Session Client para Cross Client : Salve e ative a view: Para visualizar os dados da view, clique em Data Preview :","title":"Calculation View"},{"location":"ExerciciosHANA/Exer_10/exercicio10/","text":"Exerc\u00edcio 10 - HANA Contexto O intuito do exerc\u00edcio \u00e9 compreender como funciona o CDS no HANA. Calculation View","title":"Exerc\u00edcio 10"},{"location":"ExerciciosHANA/Exer_10/exercicio10/#exercicio-10-hana","text":"","title":"Exerc\u00edcio 10 - HANA"},{"location":"ExerciciosHANA/Exer_10/exercicio10/#contexto","text":"O intuito do exerc\u00edcio \u00e9 compreender como funciona o CDS no HANA.","title":"Contexto"},{"location":"ExerciciosHANA/Exer_10/exercicio10/#calculation-view","text":"","title":"Calculation View"},{"location":"ExerciciosHANA/Exer_2/exercicio2/","text":"Exerc\u00edcio 2 - HANA Contexto Criar uma view que traga dados de conex\u00f5es (SPFLI) somente com dados de chegada dos voos (omitir informa\u00e7\u00f5es de partida dos voos). A view ser\u00e1 o inverso da view criada no exerc\u00edcio 1. Key Campo Origem X MANDT SPFLI-MANDT X CARRID SPFLI-CARRID CARRNAME SCARR-CARRNAME X CONNID SPFLI-CONNID COUNTRYTO SPFLI-COUNTRYTO CITYTO SPFLI-CITYTO AIRPTO SPFLI-AIRPTO NAME SAIRPORT-NAME DEPARTURE_TIME SPFLI-DEPTIME ARRTIME SPFLI-ARRTIME Calculation View Crie uma nova Calculation View do tipo Dimension: Adicione um projection da tabela SAPABAP1.SPFLI: Crie um novo node do tipo Join para unir a Projection Proj_Arrive_Data e a tabela SAPABAP1.SAIRPORT : Crie um novo node do tipo Join para unir o Join Join_ArriveFlight_Airport e a tabela SAPABAP1.SCARR : Adicione o Join Join_ArriveFlight_Company a Projection final de sa\u00edda da Calculation View: Na aba de Semantics , defina os campos de chave prim\u00e1ria e mude o Default Client na aba de Properties : Salve, ative e teste a view:","title":"Exerc\u00edcio 2"},{"location":"ExerciciosHANA/Exer_2/exercicio2/#exercicio-2-hana","text":"","title":"Exerc\u00edcio 2 - HANA"},{"location":"ExerciciosHANA/Exer_2/exercicio2/#contexto","text":"Criar uma view que traga dados de conex\u00f5es (SPFLI) somente com dados de chegada dos voos (omitir informa\u00e7\u00f5es de partida dos voos). A view ser\u00e1 o inverso da view criada no exerc\u00edcio 1. Key Campo Origem X MANDT SPFLI-MANDT X CARRID SPFLI-CARRID CARRNAME SCARR-CARRNAME X CONNID SPFLI-CONNID COUNTRYTO SPFLI-COUNTRYTO CITYTO SPFLI-CITYTO AIRPTO SPFLI-AIRPTO NAME SAIRPORT-NAME DEPARTURE_TIME SPFLI-DEPTIME ARRTIME SPFLI-ARRTIME","title":"Contexto"},{"location":"ExerciciosHANA/Exer_2/exercicio2/#calculation-view","text":"Crie uma nova Calculation View do tipo Dimension: Adicione um projection da tabela SAPABAP1.SPFLI: Crie um novo node do tipo Join para unir a Projection Proj_Arrive_Data e a tabela SAPABAP1.SAIRPORT : Crie um novo node do tipo Join para unir o Join Join_ArriveFlight_Airport e a tabela SAPABAP1.SCARR : Adicione o Join Join_ArriveFlight_Company a Projection final de sa\u00edda da Calculation View: Na aba de Semantics , defina os campos de chave prim\u00e1ria e mude o Default Client na aba de Properties : Salve, ative e teste a view:","title":"Calculation View"},{"location":"ExerciciosHANA/Exer_3/exercicio3/","text":"Exerc\u00edcio 3 - HANA Contexto Criar uma view que unifique os dados das duas views criadas nos exerc\u00edcios anteriores. somente com dados de partida dos voos (omitir informa\u00e7\u00f5es de chegada dos voos). A view deve retornar as seguintes informa\u00e7\u00f5es: Key Campo Origem Hidden X CLIENT CA_EXER_1-CLIENT X AIRCOMPANY_ID CA_EXER_1-AIRCOMPANY_ID COMPANY_NAME CA_EXER_1-COMPANY_NAME COMPANY_CURRENCY CA_EXER_1-COMPANY_CURRENCY X CONNECTION_ID CA_EXER_1-CONNECTION_ID DEPARTURE_COUNTRY CA_EXER_1-DEPARTURE_COUNTRY DEPARTURE_CITY CA_EXER_1-DEPARTURE_CITY DEPARTURE_AIRPORT CA_EXER_1-DEPARTURE_AIRPORT DEPARTURE_AIRPORT_NAME CA_EXER_1-DEPARTURE_AIRPORT_NAME DEPARTURE_TIME CA_EXER_1-DEPARTURE_TIME FLIGHT_TIME CA_EXER_1-FLIGHT_TIME FLIGHT_DISTANCE CA_EXER_1-FLIGHT_DISTANCE FLIGHT_DISTANCE_UNIT CA_EXER_1-FLIGHT_DISTANCE_UNIT FLIGHT_TYPE CA_EXER_1-FLIGHT_TYPE ARRIVE_COUNTRY CA_EXER_2-COUNTRYTO ARRIVE_CITY CA_EXER_2-CITYTO ARRIVE_AIRPORT CA_EXER_2-AIRPTO ARRIVE_AIRPORT_NAME CA_EXER_2-NAME ARRIVE_TIME CA_EXER_2-ARRTIME DEPARTURE_TEXT CALCULATED COLUMN Calculated Column Valor Tipo DEPARTURE_TEXT Concatenar campos DEPARTURE_COUNTRY + DEPARTURE_CITY + DEPARTURE_AIRPORT_NAME + DEPARTURE_TIME NVARCHAR(100) Calculation View Crie uma nova Calculation View do tipo Dimension: Crie um node do tipo Join que fa\u00e7a o inner join das views criadas nos exerc\u00edcios anteriores (CA_EXER_1 e CA_EXER_2): Renomeie as colunas: Adicione o Join Join_Departure_Arrive a Projection final de sa\u00edda da Calculation View: Crie um novo campo calculado: O campo ir\u00e1 concatenar as informa\u00e7\u00f5es de DEPARTURE para formar um texto de exibi\u00e7\u00e3o: string( DEPARTURE_COUNTRY + '/' + DEPARTURE_CITY + ' - ' + DEPARTURE_AIRPORT_NAME + ' - ' + string( time( DEPARTURE_TIME ) ) ) Na aba de Semantics , defina os campos de chave prim\u00e1ria e mude o Default Client na aba de Properties : Salve, ative e teste a view.","title":"Exerc\u00edcio 3"},{"location":"ExerciciosHANA/Exer_3/exercicio3/#exercicio-3-hana","text":"","title":"Exerc\u00edcio 3 - HANA"},{"location":"ExerciciosHANA/Exer_3/exercicio3/#contexto","text":"Criar uma view que unifique os dados das duas views criadas nos exerc\u00edcios anteriores. somente com dados de partida dos voos (omitir informa\u00e7\u00f5es de chegada dos voos). A view deve retornar as seguintes informa\u00e7\u00f5es: Key Campo Origem Hidden X CLIENT CA_EXER_1-CLIENT X AIRCOMPANY_ID CA_EXER_1-AIRCOMPANY_ID COMPANY_NAME CA_EXER_1-COMPANY_NAME COMPANY_CURRENCY CA_EXER_1-COMPANY_CURRENCY X CONNECTION_ID CA_EXER_1-CONNECTION_ID DEPARTURE_COUNTRY CA_EXER_1-DEPARTURE_COUNTRY DEPARTURE_CITY CA_EXER_1-DEPARTURE_CITY DEPARTURE_AIRPORT CA_EXER_1-DEPARTURE_AIRPORT DEPARTURE_AIRPORT_NAME CA_EXER_1-DEPARTURE_AIRPORT_NAME DEPARTURE_TIME CA_EXER_1-DEPARTURE_TIME FLIGHT_TIME CA_EXER_1-FLIGHT_TIME FLIGHT_DISTANCE CA_EXER_1-FLIGHT_DISTANCE FLIGHT_DISTANCE_UNIT CA_EXER_1-FLIGHT_DISTANCE_UNIT FLIGHT_TYPE CA_EXER_1-FLIGHT_TYPE ARRIVE_COUNTRY CA_EXER_2-COUNTRYTO ARRIVE_CITY CA_EXER_2-CITYTO ARRIVE_AIRPORT CA_EXER_2-AIRPTO ARRIVE_AIRPORT_NAME CA_EXER_2-NAME ARRIVE_TIME CA_EXER_2-ARRTIME DEPARTURE_TEXT CALCULATED COLUMN Calculated Column Valor Tipo DEPARTURE_TEXT Concatenar campos DEPARTURE_COUNTRY + DEPARTURE_CITY + DEPARTURE_AIRPORT_NAME + DEPARTURE_TIME NVARCHAR(100)","title":"Contexto"},{"location":"ExerciciosHANA/Exer_3/exercicio3/#calculation-view","text":"Crie uma nova Calculation View do tipo Dimension: Crie um node do tipo Join que fa\u00e7a o inner join das views criadas nos exerc\u00edcios anteriores (CA_EXER_1 e CA_EXER_2): Renomeie as colunas: Adicione o Join Join_Departure_Arrive a Projection final de sa\u00edda da Calculation View: Crie um novo campo calculado: O campo ir\u00e1 concatenar as informa\u00e7\u00f5es de DEPARTURE para formar um texto de exibi\u00e7\u00e3o: string( DEPARTURE_COUNTRY + '/' + DEPARTURE_CITY + ' - ' + DEPARTURE_AIRPORT_NAME + ' - ' + string( time( DEPARTURE_TIME ) ) ) Na aba de Semantics , defina os campos de chave prim\u00e1ria e mude o Default Client na aba de Properties : Salve, ative e teste a view.","title":"Calculation View"},{"location":"ExerciciosHANA/Exer_4/exercicio4/","text":"Exerc\u00edcio 4 - HANA Contexto Criar uma view que traga o total arrecadado com v\u00f4os pelas companhias a\u00e9reas, quebrando o montante por per\u00edodo, ano e conex\u00e3o. Dados de voos (SFLIGHT) devem ser somados para chegar ao resultado esperado. A view deve retornar as seguintes informa\u00e7\u00f5es: Key Campo Origem X MANDT SFLIGHT-MANDT X CARRID SFLIGHT-CARRID X CONNID SFLIGHT-CONNID X FLYEAR Calculated Column X FLPERIO Calculated Column PAYMENTSUM SFLIGHT-PAYMENTSUM Calculated Column Valor Tipo FLYEAR Ano do campo SFLIGHT-FLDATE NVARCHAR(4) FLPERIO Ano + M\u00eas do campo SFLIGHT-FLDATE NVARCHAR(6) Calculation View Crie uma nova Calculation View do tipo Dimension: Adicione um projection da tabela SAPABAP1.SFLIGHT: Crie tr\u00eas calculated columns, FLYEAR, FLPERIO e PRICE_FIRST_CLASS: leftstr( FLDATE ,6) leftstr( FLDATE ,4) if( SEATSOCC_F 0, if( PAYMENTSUM 0 , (( PAYMENTSUM - ( SEATSOCC_B * PRICE )) / SEATSOCC_F ) , PRICE ) , 0 ) Adicione um novo node do tipo Aggregation para sumarizar o campo PAYMENTSUM : Selecione os campos desejados: Converta o campo PAYMENTSUM para uma coluna de agrega\u00e7\u00e3o, e depois fa\u00e7a um SUM no campo: Adicione a Aggregation Aggr_Flights a Projection final de sa\u00edda da Calculation View: Na aba de Semantics , defina os campos de chave prim\u00e1ria e mude o Default Client na aba de Properties : Salve, ative e teste a view.","title":"Exerc\u00edcio 4"},{"location":"ExerciciosHANA/Exer_4/exercicio4/#exercicio-4-hana","text":"","title":"Exerc\u00edcio 4 - HANA"},{"location":"ExerciciosHANA/Exer_4/exercicio4/#contexto","text":"Criar uma view que traga o total arrecadado com v\u00f4os pelas companhias a\u00e9reas, quebrando o montante por per\u00edodo, ano e conex\u00e3o. Dados de voos (SFLIGHT) devem ser somados para chegar ao resultado esperado. A view deve retornar as seguintes informa\u00e7\u00f5es: Key Campo Origem X MANDT SFLIGHT-MANDT X CARRID SFLIGHT-CARRID X CONNID SFLIGHT-CONNID X FLYEAR Calculated Column X FLPERIO Calculated Column PAYMENTSUM SFLIGHT-PAYMENTSUM Calculated Column Valor Tipo FLYEAR Ano do campo SFLIGHT-FLDATE NVARCHAR(4) FLPERIO Ano + M\u00eas do campo SFLIGHT-FLDATE NVARCHAR(6)","title":"Contexto"},{"location":"ExerciciosHANA/Exer_4/exercicio4/#calculation-view","text":"Crie uma nova Calculation View do tipo Dimension: Adicione um projection da tabela SAPABAP1.SFLIGHT: Crie tr\u00eas calculated columns, FLYEAR, FLPERIO e PRICE_FIRST_CLASS: leftstr( FLDATE ,6) leftstr( FLDATE ,4) if( SEATSOCC_F 0, if( PAYMENTSUM 0 , (( PAYMENTSUM - ( SEATSOCC_B * PRICE )) / SEATSOCC_F ) , PRICE ) , 0 ) Adicione um novo node do tipo Aggregation para sumarizar o campo PAYMENTSUM : Selecione os campos desejados: Converta o campo PAYMENTSUM para uma coluna de agrega\u00e7\u00e3o, e depois fa\u00e7a um SUM no campo: Adicione a Aggregation Aggr_Flights a Projection final de sa\u00edda da Calculation View: Na aba de Semantics , defina os campos de chave prim\u00e1ria e mude o Default Client na aba de Properties : Salve, ative e teste a view.","title":"Calculation View"},{"location":"ExerciciosHANA/Exer_5/exercicio5/","text":"Exerc\u00edcio 5 - HANA Contexto Criar uma view que traga dados da view do exerc\u00edcio anterior (CA_EXER_4), fazendo a somat\u00f3ria do valor arrecadado por companhia, conex\u00e3o e ano. O resultado tamb\u00e9m deve ter um ranqueamento geral de todas as companhias, mostrando um rank das conex\u00f5es que mais arrecadaram. A view deve retornar as seguintes informa\u00e7\u00f5es: Key Campo Origem X MANDT CA_EXER_4-MANDT X CARRID CA_EXER_4-CARRID X CONNID CA_EXER_4-CONNID X FLYEAR CA_EXER_4-FLYEAR PAYMENTSUM SUM( CA_EXER_4-PAYMENTSUM ) PAYMENT_RANK Ranqueamentos geral por valor (PAYMENTSUM) Calculation View Crie uma nova Calculation View do tipo Dimension: Adicione um node de Aggregation que far\u00e1 a somat\u00f3ria do campo CA_EXER_4.PAYMENTSUM: Crie um novo node do tipo Rank , que far\u00e1 o ranqueamento da Aggregation Aggr_Flights_Year . Adicione o Rank Rank_Flights_Year a Projection final de sa\u00edda da Calculation View: Na aba de Semantics , defina os campos de chave prim\u00e1ria e mude o Default Client na aba de Properties : Salve, ative e teste a view.","title":"Exerc\u00edcio 5"},{"location":"ExerciciosHANA/Exer_5/exercicio5/#exercicio-5-hana","text":"","title":"Exerc\u00edcio 5 - HANA"},{"location":"ExerciciosHANA/Exer_5/exercicio5/#contexto","text":"Criar uma view que traga dados da view do exerc\u00edcio anterior (CA_EXER_4), fazendo a somat\u00f3ria do valor arrecadado por companhia, conex\u00e3o e ano. O resultado tamb\u00e9m deve ter um ranqueamento geral de todas as companhias, mostrando um rank das conex\u00f5es que mais arrecadaram. A view deve retornar as seguintes informa\u00e7\u00f5es: Key Campo Origem X MANDT CA_EXER_4-MANDT X CARRID CA_EXER_4-CARRID X CONNID CA_EXER_4-CONNID X FLYEAR CA_EXER_4-FLYEAR PAYMENTSUM SUM( CA_EXER_4-PAYMENTSUM ) PAYMENT_RANK Ranqueamentos geral por valor (PAYMENTSUM)","title":"Contexto"},{"location":"ExerciciosHANA/Exer_5/exercicio5/#calculation-view","text":"Crie uma nova Calculation View do tipo Dimension: Adicione um node de Aggregation que far\u00e1 a somat\u00f3ria do campo CA_EXER_4.PAYMENTSUM: Crie um novo node do tipo Rank , que far\u00e1 o ranqueamento da Aggregation Aggr_Flights_Year . Adicione o Rank Rank_Flights_Year a Projection final de sa\u00edda da Calculation View: Na aba de Semantics , defina os campos de chave prim\u00e1ria e mude o Default Client na aba de Properties : Salve, ative e teste a view.","title":"Calculation View"},{"location":"ExerciciosHANA/Exer_6/exercicio6/","text":"Exerc\u00edcio 6 - HANA Contexto Criar uma view que traga dados de quantas vezes os aeroportos foram destinos de conex\u00f5es (ARRIVE e DEPARTURE), tendo assim uma rela\u00e7\u00e3o dos aeroportos com maior n\u00famero de conex\u00f5es. A view deve retornar as seguintes informa\u00e7\u00f5es: Key Campo Origem X MANDT SPFLI-MANDT X AIRPFROM SPFLI-AIRPFROM e SPFLI-AIRPTO (UNION) NO_CONNECTIONS_INT COUNT(*) Calculation View Crie uma nova Calculation View do tipo Dimension: Adicione um novo node de Aggregation para tabela SAPABAP1.SPFLI fazendo um COUNT. Esse node trar\u00e1 o n\u00famero de conex\u00f5es de Departure de cada aeroporto: Renomeie o campo: Adicione um novo node de Aggregation para tabela SAPABAP1.SPFLI fazendo um COUNT. Esse node trar\u00e1 o n\u00famero de conex\u00f5es de Arrive de cada aeroporto: Renomeie o campo: Adicione um node Union que far\u00e1 a uni\u00e3o entre as duas Aggregations criadas: Fa\u00e7a a liga\u00e7\u00e3o dos campos do Union: Adicione uma nova Projection que receber\u00e1 o resultado do node Union_Airports : Nesse node faremos a convers\u00e3o do campo NO_CONNECTIONS de NVCARCHAR para INTEGER. Para isso precisamos criar uma nova Calculated Column: int( NO_CONNECTIONS ) Adicione um novo node Aggregation que far\u00e1 a somat\u00f3ria das conex\u00f5es: Adicione a Aggregation Aggr_No_Connections \u00e0 Projection final de sa\u00edda da Calculation View: Na aba de Semantics , defina os campos de chave prim\u00e1ria e mude o Default Client na aba de Properties : Salve, ative e teste a view.","title":"Exerc\u00edcio 6"},{"location":"ExerciciosHANA/Exer_6/exercicio6/#exercicio-6-hana","text":"","title":"Exerc\u00edcio 6 - HANA"},{"location":"ExerciciosHANA/Exer_6/exercicio6/#contexto","text":"Criar uma view que traga dados de quantas vezes os aeroportos foram destinos de conex\u00f5es (ARRIVE e DEPARTURE), tendo assim uma rela\u00e7\u00e3o dos aeroportos com maior n\u00famero de conex\u00f5es. A view deve retornar as seguintes informa\u00e7\u00f5es: Key Campo Origem X MANDT SPFLI-MANDT X AIRPFROM SPFLI-AIRPFROM e SPFLI-AIRPTO (UNION) NO_CONNECTIONS_INT COUNT(*)","title":"Contexto"},{"location":"ExerciciosHANA/Exer_6/exercicio6/#calculation-view","text":"Crie uma nova Calculation View do tipo Dimension: Adicione um novo node de Aggregation para tabela SAPABAP1.SPFLI fazendo um COUNT. Esse node trar\u00e1 o n\u00famero de conex\u00f5es de Departure de cada aeroporto: Renomeie o campo: Adicione um novo node de Aggregation para tabela SAPABAP1.SPFLI fazendo um COUNT. Esse node trar\u00e1 o n\u00famero de conex\u00f5es de Arrive de cada aeroporto: Renomeie o campo: Adicione um node Union que far\u00e1 a uni\u00e3o entre as duas Aggregations criadas: Fa\u00e7a a liga\u00e7\u00e3o dos campos do Union: Adicione uma nova Projection que receber\u00e1 o resultado do node Union_Airports : Nesse node faremos a convers\u00e3o do campo NO_CONNECTIONS de NVCARCHAR para INTEGER. Para isso precisamos criar uma nova Calculated Column: int( NO_CONNECTIONS ) Adicione um novo node Aggregation que far\u00e1 a somat\u00f3ria das conex\u00f5es: Adicione a Aggregation Aggr_No_Connections \u00e0 Projection final de sa\u00edda da Calculation View: Na aba de Semantics , defina os campos de chave prim\u00e1ria e mude o Default Client na aba de Properties : Salve, ative e teste a view.","title":"Calculation View"},{"location":"ExerciciosHANA/Exer_7/exercicio7/","text":"Exerc\u00edcio 7 - HANA Contexto Criar uma procedure que traga dados de conex\u00f5es (SPFLI) com dados de partida e chegada dos voos. Mesma l\u00f3gica do Exerc\u00edcio 3, por\u00e9m fazendo todas as l\u00f3gicas dentro da procedure (utilizar as views CA_EXER_1 e CA_EXER_2). A view deve retornar as seguintes informa\u00e7\u00f5es: Campo Tipo de Dados Origem CLIENT nvarchar(3) SPFLI-MANDT AIRCOMPANY_ID nvarchar(3) SPFLI-CARRID COMPANY_NAME nvarchar(20) SCARR-CARRNAME COMPANY_CURRENCY nvarchar(5) SCARR-CURRCODE CONNECTION_ID nvarchar(4) SPFLI-CONNID DEPARTURE_COUNTRY nvarchar(3) SPFLI-COUNTRYFR DEPARTURE_CITY nvarchar(20) SPFLI-CITYFROM DEPARTURE_AIRPORT nvarchar(3) SPFLI-AIRPFROM DEPARTURE_AIRPORT_NAME nvarchar(25) SAIRPORT-NAME DEPARTURE_TIME nvarchar(6) SPFLI-DEPTIME FLIGHT_TIME integer SPFLI-FLTIME ARRIVE_COUNTRY nvarchar(3) SPFLI-COUNTRYTO ARRIVE_CITY nvarchar(20) SPFLI-CITYTO ARRIVE_AIRPORT nvarchar(3) SPFLI-AIRPTO ARRIVE_AIRPORT_NAME nvarchar(25) SAIRPORT-NAME ARRIVE_TIME nvarchar(6) SPFLI-ARRTIME DEPARTURE_TEXT nvarchar(100) Calculated Column Calculated Column Valor Tipo DEPARTURE_TEXT Concatenar campos DEPARTURE_COUNTRY + DEPARTURE_CITY + DEPARTURE_AIRPORT_NAME + DEPARTURE_TIME NVARCHAR(100) Procedure Crie uma nova Stored Procedure: Crie como uma procedure do tipo XML (.procedure) , pois esse \u00e9 o tipo de procedure que \u00e9 suportado pelo ABAP. Caso a procedure n\u00e3o seja utilizada no ABAP, sempre crie como tipo Text (.hdbprocedure) : Crie o tipo de sa\u00edda da procedure: create type TT_FLIGHTS_DATA AS TABLE ( CLIENT nvarchar(3), AIRCOMPANY_ID nvarchar(3), COMPANY_NAME nvarchar(20), COMPANY_CURRENCY nvarchar(5), CONNECTION_ID nvarchar(4), DEPARTURE_COUNTRY nvarchar(3), DEPARTURE_CITY nvarchar(20), DEPARTURE_AIRPORT nvarchar(3), DEPARTURE_AIRPORT_NAME nvarchar(25), DEPARTURE_TIME nvarchar(6), FLIGHT_TIME integer, ARRIVE_COUNTRY nvarchar(3), ARRIVE_CITY nvarchar(20), ARRIVE_AIRPORT nvarchar(3), ARRIVE_AIRPORT_NAME nvarchar(25), ARRIVE_TIME nvarchar(6), DEPARTURE_TEXT nvarchar(100) ); Informe os par\u00e2metros de sa\u00edda: Fa\u00e7a a sele\u00e7\u00e3o dos dados utilizando as views do exerc\u00edcio 1 e 2: lt_flights = select departure_data.CLIENT , departure_data.AIRCOMPANY_ID , departure_data.COMPANY_NAME , departure_data.COMPANY_CURRENCY , departure_data.CONNECTION_ID , departure_data.DEPARTURE_COUNTRY , departure_data.DEPARTURE_CITY , departure_data.DEPARTURE_AIRPORT , departure_data.DEPARTURE_AIRPORT_NAME , departure_data.DEPARTURE_TIME , departure_data.FLIGHT_TIME , arrive_data.COUNTRYTO as ARRIVE_COUNTRY , arrive_data.CITYTO as ARRIVE_CITY , arrive_data.AIRPTO as ARRIVE_AIRPORT , arrive_data.NAME as ARRIVE_AIRPORT_NAME , arrive_data.ARRTIME as ARRIVE_TIME , concat( DEPARTURE_COUNTRY , concat( '/', concat( DEPARTURE_CITY , concat( ' - ', concat( DEPARTURE_AIRPORT_NAME , concat( ' - ', TO_NVARCHAR( to_time( DEPARTURE_TIME ) , 'HH:mm:SS' ) ) ) ) ) ) ) as DEPARTURE_TEXT from mog.goulartm::CA_EXER_1 as departure_data inner join mog.goulartm::CA_EXER_2 as arrive_data on departure_data.CLIENT = arrive_data.MANDT and departure_data.AIRCOMPANY_ID = arrive_data.CARRID and departure_data.CONNECTION_ID = arrive_data.CONNID ; Preencha a estrutura de sa\u00edda: et_flights = select * from :lt_flights where CLIENT = :iv_mandt ; Salve, ative e teste a procedure.","title":"Exerc\u00edcio 7"},{"location":"ExerciciosHANA/Exer_7/exercicio7/#exercicio-7-hana","text":"","title":"Exerc\u00edcio 7 - HANA"},{"location":"ExerciciosHANA/Exer_7/exercicio7/#contexto","text":"Criar uma procedure que traga dados de conex\u00f5es (SPFLI) com dados de partida e chegada dos voos. Mesma l\u00f3gica do Exerc\u00edcio 3, por\u00e9m fazendo todas as l\u00f3gicas dentro da procedure (utilizar as views CA_EXER_1 e CA_EXER_2). A view deve retornar as seguintes informa\u00e7\u00f5es: Campo Tipo de Dados Origem CLIENT nvarchar(3) SPFLI-MANDT AIRCOMPANY_ID nvarchar(3) SPFLI-CARRID COMPANY_NAME nvarchar(20) SCARR-CARRNAME COMPANY_CURRENCY nvarchar(5) SCARR-CURRCODE CONNECTION_ID nvarchar(4) SPFLI-CONNID DEPARTURE_COUNTRY nvarchar(3) SPFLI-COUNTRYFR DEPARTURE_CITY nvarchar(20) SPFLI-CITYFROM DEPARTURE_AIRPORT nvarchar(3) SPFLI-AIRPFROM DEPARTURE_AIRPORT_NAME nvarchar(25) SAIRPORT-NAME DEPARTURE_TIME nvarchar(6) SPFLI-DEPTIME FLIGHT_TIME integer SPFLI-FLTIME ARRIVE_COUNTRY nvarchar(3) SPFLI-COUNTRYTO ARRIVE_CITY nvarchar(20) SPFLI-CITYTO ARRIVE_AIRPORT nvarchar(3) SPFLI-AIRPTO ARRIVE_AIRPORT_NAME nvarchar(25) SAIRPORT-NAME ARRIVE_TIME nvarchar(6) SPFLI-ARRTIME DEPARTURE_TEXT nvarchar(100) Calculated Column Calculated Column Valor Tipo DEPARTURE_TEXT Concatenar campos DEPARTURE_COUNTRY + DEPARTURE_CITY + DEPARTURE_AIRPORT_NAME + DEPARTURE_TIME NVARCHAR(100)","title":"Contexto"},{"location":"ExerciciosHANA/Exer_7/exercicio7/#procedure","text":"Crie uma nova Stored Procedure: Crie como uma procedure do tipo XML (.procedure) , pois esse \u00e9 o tipo de procedure que \u00e9 suportado pelo ABAP. Caso a procedure n\u00e3o seja utilizada no ABAP, sempre crie como tipo Text (.hdbprocedure) : Crie o tipo de sa\u00edda da procedure: create type TT_FLIGHTS_DATA AS TABLE ( CLIENT nvarchar(3), AIRCOMPANY_ID nvarchar(3), COMPANY_NAME nvarchar(20), COMPANY_CURRENCY nvarchar(5), CONNECTION_ID nvarchar(4), DEPARTURE_COUNTRY nvarchar(3), DEPARTURE_CITY nvarchar(20), DEPARTURE_AIRPORT nvarchar(3), DEPARTURE_AIRPORT_NAME nvarchar(25), DEPARTURE_TIME nvarchar(6), FLIGHT_TIME integer, ARRIVE_COUNTRY nvarchar(3), ARRIVE_CITY nvarchar(20), ARRIVE_AIRPORT nvarchar(3), ARRIVE_AIRPORT_NAME nvarchar(25), ARRIVE_TIME nvarchar(6), DEPARTURE_TEXT nvarchar(100) ); Informe os par\u00e2metros de sa\u00edda: Fa\u00e7a a sele\u00e7\u00e3o dos dados utilizando as views do exerc\u00edcio 1 e 2: lt_flights = select departure_data.CLIENT , departure_data.AIRCOMPANY_ID , departure_data.COMPANY_NAME , departure_data.COMPANY_CURRENCY , departure_data.CONNECTION_ID , departure_data.DEPARTURE_COUNTRY , departure_data.DEPARTURE_CITY , departure_data.DEPARTURE_AIRPORT , departure_data.DEPARTURE_AIRPORT_NAME , departure_data.DEPARTURE_TIME , departure_data.FLIGHT_TIME , arrive_data.COUNTRYTO as ARRIVE_COUNTRY , arrive_data.CITYTO as ARRIVE_CITY , arrive_data.AIRPTO as ARRIVE_AIRPORT , arrive_data.NAME as ARRIVE_AIRPORT_NAME , arrive_data.ARRTIME as ARRIVE_TIME , concat( DEPARTURE_COUNTRY , concat( '/', concat( DEPARTURE_CITY , concat( ' - ', concat( DEPARTURE_AIRPORT_NAME , concat( ' - ', TO_NVARCHAR( to_time( DEPARTURE_TIME ) , 'HH:mm:SS' ) ) ) ) ) ) ) as DEPARTURE_TEXT from mog.goulartm::CA_EXER_1 as departure_data inner join mog.goulartm::CA_EXER_2 as arrive_data on departure_data.CLIENT = arrive_data.MANDT and departure_data.AIRCOMPANY_ID = arrive_data.CARRID and departure_data.CONNECTION_ID = arrive_data.CONNID ; Preencha a estrutura de sa\u00edda: et_flights = select * from :lt_flights where CLIENT = :iv_mandt ; Salve, ative e teste a procedure.","title":"Procedure"},{"location":"ExerciciosHANA/Exer_8/exercicio8/","text":"Exerc\u00edcio 8 - HANA Contexto Criar uma procedure que traga dados de conex\u00f5es (SPFLI) com dados de partida e chegada dos voos. Mesma l\u00f3gica do Exerc\u00edcio 3, por\u00e9m fazendo todas as l\u00f3gicas dentro da procedure (n\u00e3o utilizar as views CA_EXER_1 e CA_EXER_2, fazer toda l\u00f3gica dentro da procedure). A view deve retornar as seguintes informa\u00e7\u00f5es: Campo Tipo de Dados Origem CLIENT nvarchar(3) SPFLI-MANDT AIRCOMPANY_ID nvarchar(3) SPFLI-CARRID COMPANY_NAME nvarchar(20) SCARR-CARRNAME COMPANY_CURRENCY nvarchar(5) SCARR-CURRCODE CONNECTION_ID nvarchar(4) SPFLI-CONNID DEPARTURE_COUNTRY nvarchar(3) SPFLI-COUNTRYFR DEPARTURE_CITY nvarchar(20) SPFLI-CITYFROM DEPARTURE_AIRPORT nvarchar(3) SPFLI-AIRPFROM DEPARTURE_AIRPORT_NAME nvarchar(25) SAIRPORT-NAME DEPARTURE_TIME nvarchar(6) SPFLI-DEPTIME FLIGHT_TIME integer SPFLI-FLTIME ARRIVE_COUNTRY nvarchar(3) SPFLI-COUNTRYTO ARRIVE_CITY nvarchar(20) SPFLI-CITYTO ARRIVE_AIRPORT nvarchar(3) SPFLI-AIRPTO ARRIVE_AIRPORT_NAME nvarchar(25) SAIRPORT-NAME ARRIVE_TIME nvarchar(6) SPFLI-ARRTIME DEPARTURE_TEXT nvarchar(100) Calculated Column Calculated Column Valor Tipo DEPARTURE_TEXT Concatenar campos DEPARTURE_COUNTRY + DEPARTURE_CITY + DEPARTURE_AIRPORT_NAME + DEPARTURE_TIME NVARCHAR(100) Procedure Crie uma nova Stored Procedure do tipo Text (.hdbprocedure): Defina os par\u00e2metros de entrada e de sa\u00edda da procedure: in iv_mandt nvarchar(3), out et_flights table( CLIENT nvarchar(3), AIRCOMPANY_ID nvarchar(3), COMPANY_NAME nvarchar(20), COMPANY_CURRENCY nvarchar(5), CONNECTION_ID nvarchar(4), DEPARTURE_COUNTRY nvarchar(3), DEPARTURE_CITY nvarchar(20), DEPARTURE_AIRPORT nvarchar(3), DEPARTURE_AIRPORT_NAME nvarchar(25), DEPARTURE_TIME nvarchar(6), FLIGHT_TIME integer, ARRIVE_COUNTRY nvarchar(3), ARRIVE_CITY nvarchar(20), ARRIVE_AIRPORT nvarchar(3), ARRIVE_AIRPORT_NAME nvarchar(25), ARRIVE_TIME nvarchar(6), DEPARTURE_TEXT nvarchar(100) Fa\u00e7a uma query para trazer os dados das conex\u00f5es (SAPABAP1.SPFLI): lt_connections = select MANDT , CARRID , CONNID , COUNTRYFR , CITYFROM , AIRPFROM , DEPTIME , FLTIME , COUNTRYTO , CITYTO , AIRPTO , ARRTIME from SAPABAP1 . SPFLI where MANDT = :iv_mandt ; Traga os dados de aeroportos (SAPABAP1.SAIRPORT): lt_airports = select MANDT , ID as AIRPID , NAME from SAPABAP1 . SAIRPORT where MANDT = :iv_mandt and ID in ( select distinct AIRPFROM from :lt_connections union distinct select distinct AIRPTO from :lt_connections ) ; Traga os dados de companhias a\u00e9reas (SAPABAP1.SCARR): lt_companies = select MANDT , CARRID , CARRNAME , CURRCODE from SAPABAP1 . SCARR where MANDT = :iv_mandt and CARRID in ( select distinct CARRID from :lt_connections ) ; Fa\u00e7a a jun\u00e7\u00e3o das 3 entidades, compondo os dados com os campos utilizados pela sua estrutura de sa\u00edda da procedure: lt_connections_join = select connection.MANDT as CLIENT , connection.CARRID as AIRCOMPANY_ID , company.CARRNAME as COMPANY_NAME , company.CURRCODE as COMPANY_CURRENCY , connection.CONNID as CONNECTION_ID , connection.COUNTRYFR as DEPARTURE_COUNTRY , connection.CITYFROM as DEPARTURE_CITY , connection.AIRPFROM as DEPARTURE_AIRPORT , airport_from.NAME as DEPARTURE_AIRPORT_NAME , connection.DEPTIME as DEPARTURE_TIME , connection.FLTIME as FLIGHT_TIME , connection.COUNTRYTO as ARRIVE_COUNTRY , connection.CITYTO as ARRIVE_CITY , connection.AIRPTO as ARRIVE_AIRPORT , airport_to.NAME as ARRIVE_AIRPORT_NAME , connection.ARRTIME as ARRIVE_TIME , concat( connection.COUNTRYFR, concat( '/', concat( connection.CITYFROM, concat( ' - ', concat( airport_from.NAME, concat( ' - ', TO_NVARCHAR( to_time( connection.DEPTIME ) , 'HH:mm:SS' ) ) ) ) ) ) ) as DEPARTURE_TEXT FROM :lt_connections as connection inner join :lt_companies as company on company.MANDT = connection.MANDT and company.CARRID = connection.CARRID inner join :lt_airports as airport_from on airport_from.MANDT = connection.MANDT and airport_from.AIRPID = connection.AIRPFROM inner join :lt_airports as airport_to on airport_to.MANDT = connection.MANDT and airport_to.AIRPID = connection.AIRPTO ; Preencha a estrutura de sa\u00edda da procedure: et_flights = select * from :lt_connections_join ; Salve, ative e teste a procedure.","title":"Exerc\u00edcio 8"},{"location":"ExerciciosHANA/Exer_8/exercicio8/#exercicio-8-hana","text":"","title":"Exerc\u00edcio 8 - HANA"},{"location":"ExerciciosHANA/Exer_8/exercicio8/#contexto","text":"Criar uma procedure que traga dados de conex\u00f5es (SPFLI) com dados de partida e chegada dos voos. Mesma l\u00f3gica do Exerc\u00edcio 3, por\u00e9m fazendo todas as l\u00f3gicas dentro da procedure (n\u00e3o utilizar as views CA_EXER_1 e CA_EXER_2, fazer toda l\u00f3gica dentro da procedure). A view deve retornar as seguintes informa\u00e7\u00f5es: Campo Tipo de Dados Origem CLIENT nvarchar(3) SPFLI-MANDT AIRCOMPANY_ID nvarchar(3) SPFLI-CARRID COMPANY_NAME nvarchar(20) SCARR-CARRNAME COMPANY_CURRENCY nvarchar(5) SCARR-CURRCODE CONNECTION_ID nvarchar(4) SPFLI-CONNID DEPARTURE_COUNTRY nvarchar(3) SPFLI-COUNTRYFR DEPARTURE_CITY nvarchar(20) SPFLI-CITYFROM DEPARTURE_AIRPORT nvarchar(3) SPFLI-AIRPFROM DEPARTURE_AIRPORT_NAME nvarchar(25) SAIRPORT-NAME DEPARTURE_TIME nvarchar(6) SPFLI-DEPTIME FLIGHT_TIME integer SPFLI-FLTIME ARRIVE_COUNTRY nvarchar(3) SPFLI-COUNTRYTO ARRIVE_CITY nvarchar(20) SPFLI-CITYTO ARRIVE_AIRPORT nvarchar(3) SPFLI-AIRPTO ARRIVE_AIRPORT_NAME nvarchar(25) SAIRPORT-NAME ARRIVE_TIME nvarchar(6) SPFLI-ARRTIME DEPARTURE_TEXT nvarchar(100) Calculated Column Calculated Column Valor Tipo DEPARTURE_TEXT Concatenar campos DEPARTURE_COUNTRY + DEPARTURE_CITY + DEPARTURE_AIRPORT_NAME + DEPARTURE_TIME NVARCHAR(100)","title":"Contexto"},{"location":"ExerciciosHANA/Exer_8/exercicio8/#procedure","text":"Crie uma nova Stored Procedure do tipo Text (.hdbprocedure): Defina os par\u00e2metros de entrada e de sa\u00edda da procedure: in iv_mandt nvarchar(3), out et_flights table( CLIENT nvarchar(3), AIRCOMPANY_ID nvarchar(3), COMPANY_NAME nvarchar(20), COMPANY_CURRENCY nvarchar(5), CONNECTION_ID nvarchar(4), DEPARTURE_COUNTRY nvarchar(3), DEPARTURE_CITY nvarchar(20), DEPARTURE_AIRPORT nvarchar(3), DEPARTURE_AIRPORT_NAME nvarchar(25), DEPARTURE_TIME nvarchar(6), FLIGHT_TIME integer, ARRIVE_COUNTRY nvarchar(3), ARRIVE_CITY nvarchar(20), ARRIVE_AIRPORT nvarchar(3), ARRIVE_AIRPORT_NAME nvarchar(25), ARRIVE_TIME nvarchar(6), DEPARTURE_TEXT nvarchar(100) Fa\u00e7a uma query para trazer os dados das conex\u00f5es (SAPABAP1.SPFLI): lt_connections = select MANDT , CARRID , CONNID , COUNTRYFR , CITYFROM , AIRPFROM , DEPTIME , FLTIME , COUNTRYTO , CITYTO , AIRPTO , ARRTIME from SAPABAP1 . SPFLI where MANDT = :iv_mandt ; Traga os dados de aeroportos (SAPABAP1.SAIRPORT): lt_airports = select MANDT , ID as AIRPID , NAME from SAPABAP1 . SAIRPORT where MANDT = :iv_mandt and ID in ( select distinct AIRPFROM from :lt_connections union distinct select distinct AIRPTO from :lt_connections ) ; Traga os dados de companhias a\u00e9reas (SAPABAP1.SCARR): lt_companies = select MANDT , CARRID , CARRNAME , CURRCODE from SAPABAP1 . SCARR where MANDT = :iv_mandt and CARRID in ( select distinct CARRID from :lt_connections ) ; Fa\u00e7a a jun\u00e7\u00e3o das 3 entidades, compondo os dados com os campos utilizados pela sua estrutura de sa\u00edda da procedure: lt_connections_join = select connection.MANDT as CLIENT , connection.CARRID as AIRCOMPANY_ID , company.CARRNAME as COMPANY_NAME , company.CURRCODE as COMPANY_CURRENCY , connection.CONNID as CONNECTION_ID , connection.COUNTRYFR as DEPARTURE_COUNTRY , connection.CITYFROM as DEPARTURE_CITY , connection.AIRPFROM as DEPARTURE_AIRPORT , airport_from.NAME as DEPARTURE_AIRPORT_NAME , connection.DEPTIME as DEPARTURE_TIME , connection.FLTIME as FLIGHT_TIME , connection.COUNTRYTO as ARRIVE_COUNTRY , connection.CITYTO as ARRIVE_CITY , connection.AIRPTO as ARRIVE_AIRPORT , airport_to.NAME as ARRIVE_AIRPORT_NAME , connection.ARRTIME as ARRIVE_TIME , concat( connection.COUNTRYFR, concat( '/', concat( connection.CITYFROM, concat( ' - ', concat( airport_from.NAME, concat( ' - ', TO_NVARCHAR( to_time( connection.DEPTIME ) , 'HH:mm:SS' ) ) ) ) ) ) ) as DEPARTURE_TEXT FROM :lt_connections as connection inner join :lt_companies as company on company.MANDT = connection.MANDT and company.CARRID = connection.CARRID inner join :lt_airports as airport_from on airport_from.MANDT = connection.MANDT and airport_from.AIRPID = connection.AIRPFROM inner join :lt_airports as airport_to on airport_to.MANDT = connection.MANDT and airport_to.AIRPID = connection.AIRPTO ; Preencha a estrutura de sa\u00edda da procedure: et_flights = select * from :lt_connections_join ; Salve, ative e teste a procedure.","title":"Procedure"},{"location":"ExerciciosHANA/Exer_9/exercicio9/","text":"Exerc\u00edcio 9 - HANA Contexto Criar uma table function que traga dados de quantas vezes os aeroportos foram destinos de conex\u00f5es (ARRIVE e DEPARTURE), tendo assim uma rela\u00e7\u00e3o dos aeroportos com maior n\u00famero de conex\u00f5es. A view deve retornar as seguintes informa\u00e7\u00f5es: Campo Origem Tipo de Dados CLIENT SPFLI-MANDT nvarchar(3) AIRPORT SPFLI-AIRPFROM e SPFLI-AIRPTO (UNION) nvarchar(3) NO_CONNECTIONS COUNT(*) integer Table Function Crie uma table function: Defina a estrutura de Return da table function e os par\u00e2metros de entrada: FUNCTION _SYS_BIC . mog.goulartm::TF_EXER_9 ( in iv_mandt nvarchar(3) ) RETURNS table ( CLIENT nvarchar(3), AIRPORT nvarchar(3), NO_CONNECTIONS integer ) Busque os dados de conex\u00f5es na tabela SAPABAP1.SPFLI : Fa\u00e7a duas agrega\u00e7\u00f5es, uma que mostre a quantidade de vezes que um aeroporto \u00e9 utilizado como origem de uma conex\u00e3o (departure), e outra que mostra a quantidade de vezes que um aeroporto \u00e9 utilizado como destino de uma conex\u00e3o (arrive): Fa\u00e7a um union das duas agrega\u00e7\u00f5es: Somar as utiliza\u00e7\u00f5es por aeroporto: Fa\u00e7a o return da table function: Salve, ative e teste:","title":"Exerc\u00edcio 9"},{"location":"ExerciciosHANA/Exer_9/exercicio9/#exercicio-9-hana","text":"","title":"Exerc\u00edcio 9 - HANA"},{"location":"ExerciciosHANA/Exer_9/exercicio9/#contexto","text":"Criar uma table function que traga dados de quantas vezes os aeroportos foram destinos de conex\u00f5es (ARRIVE e DEPARTURE), tendo assim uma rela\u00e7\u00e3o dos aeroportos com maior n\u00famero de conex\u00f5es. A view deve retornar as seguintes informa\u00e7\u00f5es: Campo Origem Tipo de Dados CLIENT SPFLI-MANDT nvarchar(3) AIRPORT SPFLI-AIRPFROM e SPFLI-AIRPTO (UNION) nvarchar(3) NO_CONNECTIONS COUNT(*) integer","title":"Contexto"},{"location":"ExerciciosHANA/Exer_9/exercicio9/#table-function","text":"Crie uma table function: Defina a estrutura de Return da table function e os par\u00e2metros de entrada: FUNCTION _SYS_BIC . mog.goulartm::TF_EXER_9 ( in iv_mandt nvarchar(3) ) RETURNS table ( CLIENT nvarchar(3), AIRPORT nvarchar(3), NO_CONNECTIONS integer ) Busque os dados de conex\u00f5es na tabela SAPABAP1.SPFLI : Fa\u00e7a duas agrega\u00e7\u00f5es, uma que mostre a quantidade de vezes que um aeroporto \u00e9 utilizado como origem de uma conex\u00e3o (departure), e outra que mostra a quantidade de vezes que um aeroporto \u00e9 utilizado como destino de uma conex\u00e3o (arrive): Fa\u00e7a um union das duas agrega\u00e7\u00f5es: Somar as utiliza\u00e7\u00f5es por aeroporto: Fa\u00e7a o return da table function: Salve, ative e teste:","title":"Table Function"},{"location":"FlightDataModel/flightModel/","text":"Modelo de Dados Modelo de dados das tabelas de Flights","title":"Modelo de Dados"},{"location":"FlightDataModel/flightModel/#modelo-de-dados","text":"","title":"Modelo de Dados"},{"location":"FlightDataModel/flightModel/#modelo-de-dados-das-tabelas-de-flights","text":"","title":"Modelo de dados das tabelas de Flights"},{"location":"PreRequisitos/preRequisitos/","text":"Pr\u00e9-Requisitos Instala\u00e7\u00e3o do SAP GUI 7.5 Durante o processo de instala\u00e7\u00e3o dos arquivos abaixo, atente-se \u00e0 vers\u00e3o do seu sistema operacional, se \u00e9 32 ou 64 bits. Windows Baixar o SAP GUI 7.5 e os patchs mais recentes no SAP ONE Support (necess\u00e1rio S-User com permiss\u00e3o), ou baixar no link abaixo do Google Drive. SAP GUI 7.5 Instale na ordem o SAP GUI 7.5, o \u00faltimo patch (Patch 6) e os hotfix liberados para o patch instalado (Patch 6 Hotfix 1). Instala\u00e7\u00e3o do JAVA 8 JDK Windows Acesse o site da Oracle e instale o Java JDK 8 (instalar o update mais recente, desde que seja Java 8. Atentar ao fato que \u00e9 preciso instalar o JDK e n\u00e3o o JRE, e o Java precisa estar na vers\u00e3o 8 (vers\u00f5es anteriores n\u00e3o servem). Ap\u00f3s a instala\u00e7\u00e3o, verifique se existe a vari\u00e1vel de sistema JAVA_HOME e se ela est\u00e1 apontando para o diret\u00f3rio de instala\u00e7\u00e3o do seu Java JDK. Instala\u00e7\u00e3o do Eclipse Para instala\u00e7\u00e3o do Eclipse \u00e9 preciso ter o JAVA instalado previamente. Windows Acesse o site do Eclipse e fa\u00e7a download do Eclipse Oxygen 4.7 Instale a op\u00e7\u00e3o \"Eclipse IDE for Java Developers\" Instala\u00e7\u00e3o do ADT (ABAP Development Tools) Windows Os passos a seguir est\u00e3o descritos no site SAP Development Tools ABAP para instalar o plugin ADT (ABAP Development Tools) no Eclipse Oxygen. Abra o Eclipse Oxygen; V\u00e1 em Help Install New Software.. ; Adicione o reposit\u00f3rio https://tools.hana.ondemand.com/oxygen e pressione Enter ; Marque as op\u00e7\u00f5es ABAP Development Tools e SAP HANA Tools e clique em Next ; Clique novamente em Next , aceite os termos de licen\u00e7a e clique em Finish ; O Eclipse vai come\u00e7ar a baixar e instalar os Plugins de ABAP e de HANA; Caso apare\u00e7a algum warning, basta clicar em Install Anyway ; Ap\u00f3s conclus\u00e3o da instala\u00e7\u00e3o, ser\u00e1 necess\u00e1rio reiniciar o Eclipse Oxygen; Para verificar se a instala\u00e7\u00e3o dos plugins ocorreu com sucesso, basta seguir os seguintes procedimentos: Acesse o menu Window Perspective Open Perspective Other... ; Dever\u00e1 ter as duas perspectivas na lista de perspectivas, a de ABAP e a de HANA;","title":"Pr\u00e9-Requisitos"},{"location":"PreRequisitos/preRequisitos/#pre-requisitos","text":"","title":"Pr\u00e9-Requisitos"},{"location":"PreRequisitos/preRequisitos/#instalacao-do-sap-gui-75","text":"Durante o processo de instala\u00e7\u00e3o dos arquivos abaixo, atente-se \u00e0 vers\u00e3o do seu sistema operacional, se \u00e9 32 ou 64 bits.","title":"Instala\u00e7\u00e3o do SAP GUI 7.5"},{"location":"PreRequisitos/preRequisitos/#windows","text":"Baixar o SAP GUI 7.5 e os patchs mais recentes no SAP ONE Support (necess\u00e1rio S-User com permiss\u00e3o), ou baixar no link abaixo do Google Drive. SAP GUI 7.5 Instale na ordem o SAP GUI 7.5, o \u00faltimo patch (Patch 6) e os hotfix liberados para o patch instalado (Patch 6 Hotfix 1).","title":"Windows"},{"location":"PreRequisitos/preRequisitos/#instalacao-do-java-8-jdk","text":"","title":"Instala\u00e7\u00e3o do JAVA 8 JDK"},{"location":"PreRequisitos/preRequisitos/#windows_1","text":"Acesse o site da Oracle e instale o Java JDK 8 (instalar o update mais recente, desde que seja Java 8. Atentar ao fato que \u00e9 preciso instalar o JDK e n\u00e3o o JRE, e o Java precisa estar na vers\u00e3o 8 (vers\u00f5es anteriores n\u00e3o servem). Ap\u00f3s a instala\u00e7\u00e3o, verifique se existe a vari\u00e1vel de sistema JAVA_HOME e se ela est\u00e1 apontando para o diret\u00f3rio de instala\u00e7\u00e3o do seu Java JDK.","title":"Windows"},{"location":"PreRequisitos/preRequisitos/#instalacao-do-eclipse","text":"Para instala\u00e7\u00e3o do Eclipse \u00e9 preciso ter o JAVA instalado previamente.","title":"Instala\u00e7\u00e3o do Eclipse"},{"location":"PreRequisitos/preRequisitos/#windows_2","text":"Acesse o site do Eclipse e fa\u00e7a download do Eclipse Oxygen 4.7 Instale a op\u00e7\u00e3o \"Eclipse IDE for Java Developers\"","title":"Windows"},{"location":"PreRequisitos/preRequisitos/#instalacao-do-adt-abap-development-tools","text":"","title":"Instala\u00e7\u00e3o do ADT (ABAP Development Tools)"},{"location":"PreRequisitos/preRequisitos/#windows_3","text":"Os passos a seguir est\u00e3o descritos no site SAP Development Tools ABAP para instalar o plugin ADT (ABAP Development Tools) no Eclipse Oxygen. Abra o Eclipse Oxygen; V\u00e1 em Help Install New Software.. ; Adicione o reposit\u00f3rio https://tools.hana.ondemand.com/oxygen e pressione Enter ; Marque as op\u00e7\u00f5es ABAP Development Tools e SAP HANA Tools e clique em Next ; Clique novamente em Next , aceite os termos de licen\u00e7a e clique em Finish ; O Eclipse vai come\u00e7ar a baixar e instalar os Plugins de ABAP e de HANA; Caso apare\u00e7a algum warning, basta clicar em Install Anyway ; Ap\u00f3s conclus\u00e3o da instala\u00e7\u00e3o, ser\u00e1 necess\u00e1rio reiniciar o Eclipse Oxygen; Para verificar se a instala\u00e7\u00e3o dos plugins ocorreu com sucesso, basta seguir os seguintes procedimentos: Acesse o menu Window Perspective Open Perspective Other... ; Dever\u00e1 ter as duas perspectivas na lista de perspectivas, a de ABAP e a de HANA;","title":"Windows"}]}